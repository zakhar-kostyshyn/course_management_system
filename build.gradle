plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    id "co.uzzu.dotenv.gradle" version "1.2.0"
    id 'org.liquibase.gradle' version '2.1.0'
    id 'nu.studer.jooq' version '6.0.1'

}


group = 'com.sombra'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'



configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'

    compileOnly 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.10.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    liquibaseRuntime 'info.picocli:picocli:4.6.3'
    liquibaseRuntime 'org.postgresql:postgresql'

    jooqGenerator 'org.postgresql:postgresql:42.3.2'
}

def db = property('DATABASE_DB')
def dbPort = property('DATABASE_PORT')
def dbHost = property('DATABASE_HOST')

def dbUrl = 'jdbc:postgresql://' + dbHost + ':' + dbPort + '/' + db
def dbUsername = property('DATABASE_USERNAME')
def dbPassword = property('DATABASE_PASSWORD')

jooq {
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = dbUrl
                    user = dbUsername
                    password = dbPassword
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.sombra.promotion'
                        directory = 'build/generated-src/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

liquibase {
    activities {
        main {
            changeLogFile 'liquibase/main_changelog.xml'
            url dbUrl
            username dbUsername
            password dbPassword
        }
    }
}

build.dependsOn update
