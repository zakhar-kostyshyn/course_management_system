plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    id "co.uzzu.dotenv.gradle" version "1.2.0"
}

group = 'com.sombra'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

task forExample() {
    doLast {
        exec {
            environment 'test', 'test'
        }
    }
}



tasks.register("setEnv") {
//    environment = env.allVariables
    println env.POSTGRES_DB.value
    println env.POSTGRES_USER.value
    println env.POSTGRES_PASSWORD.value
    println env.POSTGRES_PORT.value
    println env.SPRING_SERVER_PORT.value
    println env.DB_HOST.value
    environment 'test', 'test'
}


tasks.named('test') {
    useJUnitPlatform()
}
